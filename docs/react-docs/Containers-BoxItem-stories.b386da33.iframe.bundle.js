"use strict";(self.webpackChunkreact_examples=self.webpackChunkreact_examples||[]).push([[7186],{"./stories/Containers/BoxItem.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BlockBoxItem:()=>BlockBoxItem,InlineBoxItem:()=>InlineBoxItem,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Containers/TwixtBoxItem",component:__webpack_require__("../react/src/Containers/BoxItem/index.js").A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{type:["block","inline"]}};var BlockBoxItem={args:{type:"block",children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,"block content")}},InlineBoxItem={args:{type:"inline",children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,"Inline content")}};const __namedExportsOrder=["BlockBoxItem","InlineBoxItem"];BlockBoxItem.parameters={...BlockBoxItem.parameters,docs:{...BlockBoxItem.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'block',\n    children: <>block content</>\n  }\n}",...BlockBoxItem.parameters?.docs?.source}}},InlineBoxItem.parameters={...InlineBoxItem.parameters,docs:{...InlineBoxItem.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'inline',\n    children: <>Inline content</>\n  }\n}",...InlineBoxItem.parameters?.docs?.source}}}},"../react/src/Containers/BoxItem/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>BoxItem_BoxItem});var react=__webpack_require__("./node_modules/react/index.js");function BoxItem(param){var _param_type=param.type,type=void 0===_param_type?"block":_param_type,children=param.children,_param_overwriteClass=param.overwriteClass,overwriteClass=void 0===_param_overwriteClass?"":_param_overwriteClass;return"block"==type?react.createElement("div",{className:overwriteClass},children):"inline"==type?react.createElement("span",{className:overwriteClass},children):null}const BoxItem_BoxItem=BoxItem;BoxItem.__docgenInfo={description:"",methods:[],displayName:"BoxItem",props:{type:{defaultValue:{value:"'block'",computed:!1},required:!1},overwriteClass:{defaultValue:{value:"''",computed:!1},required:!1}}}}}]);